{"EDITOR_STATE":{"allProjectFiles":{"d4e74488-af1a-42cb-94f5-ff710c76b5f1":{"id":"d4e74488-af1a-42cb-94f5-ff710c76b5f1","parent":null,"name":"AWS1","type":"DIRECTORY","isDirectory":true,"children":["80f2c8d4-0fee-4f7d-85b9-23b0b4c93e04"],"isRemovable":false,"filePath":"AWS1"},"80f2c8d4-0fee-4f7d-85b9-23b0b4c93e04":{"id":"80f2c8d4-0fee-4f7d-85b9-23b0b4c93e04","parent":"d4e74488-af1a-42cb-94f5-ff710c76b5f1","name":"lambda.js","type":"LAMBDA_FILE","isDirectory":false,"children":[],"isRemovable":true,"filePath":"AWS1/lambda.js","code":"let AWS = require('aws-sdk');\nlet SL = require('@slappforge/slappforge-sdk');\nconst sqs = new SL.AWS.SQS(AWS);\nconst sns = new AWS.SNS();\nconst s3 = new AWS.S3();\nconst kinesis = new AWS.Kinesis();\nconst ddb = new AWS.DynamoDB.DocumentClient();\nexports.handler = function (event, context, callback) {\n\n\n\tcallback(null, 'Successfully executed');\n\tddb.put({\n\t\tTableName: 'LeadDetails',\n\t\tItem: { 'LeadId': 123, 'LeadName': 'Sivashangari', 'Company': 'aws' }\n\t}, function (err, data) {\n\t\tif (err) {\n\t\t\t//handle error\n\t\t} else {\n\t\t\t//your logic goes here\n\n\t\t\tsns.publish({\n\t\t\t\tMessage: 'testing direct sms from sigma',\n\t\t\t\tMessageAttributes: {\n\t\t\t\t\t'AWS.SNS.SMS.SMSType': {\n\t\t\t\t\t\tDataType: 'String',\n\t\t\t\t\t\tStringValue: 'Promotional'\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tPhoneNumber: '9791765670'\n\t\t\t}).promise()\n\t\t\t\t.then(data => {\n\t\t\t\t\t// your code goes here\n\t\t\t\t})\n\t\t\t\n\t\t\tsqs.receiveMessage({\n\t\t\t\tQueueUrl: 'https://sqs.us-east-1.amazonaws.com/883364783971/awsqueue',\n\t\t\t\tAttributeNames: ['All'],\n\t\t\t\tMaxNumberOfMessages: '1',\n\t\t\t\tVisibilityTimeout: '30',\n\t\t\t\tWaitTimeSeconds: '0',\n\t\t\t\tMessageAttributeNames: ['']\n\t\t\t}, function (receivedMessages) {\n\t\t\t\treceivedMessages.forEach(message => {\n\t\t\t\t\t// your logic to access each message through out the loop. Each message is available under variable message \n\t\t\t\t\t// within this block\n\t\t\t\t})\n\t\t\t}, function (error) {\n\t\t\t\t// implement error handling logic here\n\t\t\t});\n\t\t\t\t.catch(err => {\n\t\t\t\t// error handling goes here\n\t\t\t});\n\tkinesis.describeStream({\n\t\tStreamName: 'my-stream'\n\t}).promise()\n\t\t.then(data => {\n\t\t\t// your logic goes here\n\t\t\ts3.getBucketLocation({\n\t\t\t\t'Bucket': \"crmbucket\"\n\t\t\t}).promise()\n\t\t\t\t.then(data => {\n\t\t\t\t\tconsole.log(data);           // successful response\n\t\t\t\t\t/*\n\t\t\t\t\tdata = {\n\t\t\t\t\t\tLocationConstraint: \"us-west-2\"\n\t\t\t\t\t}\n\t\t\t\t\t*/\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tconsole.log(err, err.stack); // an error occurred\n\t\t\t\t});\n\t\t})\n\t\t.catch(err => {\n\t\t\t// error handling goes here\n\t\t});\n}\n\t});\n}","triggers":[],"version":22}},"rootNode":"d4e74488-af1a-42cb-94f5-ff710c76b5f1","openFiles":["80f2c8d4-0fee-4f7d-85b9-23b0b4c93e04"],"currentFileId":"80f2c8d4-0fee-4f7d-85b9-23b0b4c93e04","resources":{"ddbLeadDetails":{"name":"ddbLeadDetails","type":"DynamoDB","config":{"mode":0,"operation":"put","table":{"arn":"","name":"LeadDetails","partitionKey":"LeadId","partitionKeyType":"S","hasSortKey":false,"sortKey":"","sortKeyType":"S","mode":0},"parameters":{"Key":{},"Item":{"LeadId":123,"LeadName":"Sivashangari","Company":"aws"},"ExpressionAttributeValues":{":":""}},"validator":{"validatableFields":{},"validity":true},"valid":true},"globallyEditable":false},"kinesismyStream":{"name":"kinesismyStream","type":"Kinesis","config":{"mode":0,"StreamName":"my-stream","shards":1,"region":"us-east-1","operation":"describe-stream"},"globallyEditable":true},"s3crmbucket":{"name":"s3crmbucket","type":"S3","config":{"mode":0,"bucket":{"region":"us-east-1","name":"crmbucket"}},"globallyEditable":false},"snsDirectSMSResource":{"name":"snsDirectSMSResource","type":"SNS","config":{"snsType":1,"numbers":["9791765670"]},"globallyEditable":false},"sqsusEast1awsqueue":{"name":"sqsusEast1awsqueue","type":"SQS","config":{"mode":0,"existing":false,"name":"awsqueue","url":"https://sqs.us-east-1.amazonaws.com/883364783971/awsqueue","selectedRegion":"us-east-1","deliveryDelay":0,"deliveryDelayUnit":"seconds","useRedrivePolicy":false,"useSSE":false,"kmsCustomerMasterKey":"default","accountId":"883364783971","dataKeyReusePeriod":5,"queueType":"standardQueue","defaultVisibilityTimeout":30,"defaultVisibilityTimeoutUnit":"seconds","messageRetentionPeriod":4,"messageRetentionPeriodUnit":"days","maximumMessageSize":256,"receiveMessageWaitTime":0,"deadLetterQueueName":"","contentBasedDeduplication":false,"operation":0},"globallyEditable":true}},"packageJSON":{"dependencies":{"aws-sdk":{"name":"aws-sdk","version":"2.176.0","notRemovable":true},"slappforge-sdk":{"name":"@slappforge/slappforge-sdk","version":"0.0.3","notRemovable":true,"types":"\n                    declare class RDSQueryParams {\n    instanceIdentifier: string;\n    query: string;\n    inserts: Array<any>\n}\n\ndeclare namespace SL.AWS {\n    class RDS {\n        query(params: RDSQueryParams, callback: Function, connection: any): void;\n\n        beginTransaction(params: any, callback: Function): void;\n    }\n\n    class SQS {\n        receiveAndDeleteMessages(params: any, filteringCallBack: Function, deleteCallBack: Function, errorCallBack: Function): void;\n    }\n}\n"},"SL":"1.0.0"}},"lambdaId":"80f2c8d4-0fee-4f7d-85b9-23b0b4c93e04","additionalFiles":[]},"PROJECT_META":{"projectName":"AWS1","projectDescription":"trying out aws ","projectVersion":"1.0.0","projectRegion":"us-east-1","repoName":"AWS1","repoUrl":"https://github.com/sivashangari-manimuthu/AWS1","lastSave":1521626847865}}